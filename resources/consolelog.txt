Hibernate: select max(users0_.user_id) as col_0_0_ from users users0_
Hibernate: select company0_.comp_id as comp_id1_2_, company0_.address_line_1 as address_2_2_, company0_.address_line_2 as address_3_2_, company0_.address_line_3 as address_4_2_, company0_.company_email as company_5_2_, company0_.companyLogo as companyL6_2_, company0_.company_name as company_7_2_, company0_.company_register_num as company_8_2_, company0_.fax_number as fax_numb9_2_, company0_.province as provinc10_2_, company0_.telephone_num as telepho11_2_ from company company0_
Hibernate: select distinct users0_.user_id as user_id1_32_0_, role2_.role_id as role_id1_20_1_, rolefuncti4_.func_id as func_id1_22_2_, users0_.status as status2_32_0_, users0_.address as address3_32_0_, users0_.contact_num as contact_4_32_0_, users0_.dob as dob5_32_0_, users0_.first_name as first_na6_32_0_, users0_.last_login as last_log7_32_0_, users0_.last_name as last_nam8_32_0_, users0_.loginStatus as loginSta9_32_0_, users0_.password as passwor10_32_0_, users0_.user_email as user_em11_32_0_, users0_.user_name as user_na12_32_0_, role2_.role_desc as role_des2_20_1_, role2_.role_name as role_nam3_20_1_, role1_.users_user_id as users_us1_31_0__, role1_.role_role_id as role_rol2_31_0__, rolefuncti4_.main_role_function as main_rol4_22_2_, rolefuncti4_.role_access as role_acc2_22_2_, rolefuncti4_.role_function_name as role_fun3_22_2_, rolefuncti3_.rolelist_role_id as rolelist1_21_1__, rolefuncti3_.roleFunctions_func_id as roleFunc2_21_1__ from users users0_ inner join user_role role1_ on users0_.user_id=role1_.users_user_id inner join role role2_ on role1_.role_role_id=role2_.role_id inner join role_and_functions rolefuncti3_ on role2_.role_id=rolefuncti3_.rolelist_role_id inner join rolefunctions rolefuncti4_ on rolefuncti3_.roleFunctions_func_id=rolefuncti4_.func_id where users0_.user_name=? and rolefuncti4_.role_access=?
Hibernate: select cashregist0_.registry_date as registry1_0_, cashregist0_.user_id as user_id13_0_, cashregist0_.closingCashBalance as closingC2_0_, cashregist0_.log_out_Date as log_out_3_0_, cashregist0_.log_out_time as log_out_4_0_, cashregist0_.log_in_date as log_in_d5_0_, cashregist0_.log_in_time as log_in_t6_0_, cashregist0_.opening_cash_balance as opening_7_0_, cashregist0_.cash_payments as cash_pay8_0_, cashregist0_.signin_status as signin_s9_0_, cashregist0_.total_cash_sales as total_c10_0_, cashregist0_.total_credit_card_sales as total_c11_0_, cashregist0_.user_name as user_na12_0_ from cash_register cashregist0_ inner join users users1_ on cashregist0_.user_id=users1_.user_id where users1_.user_id=? and cashregist0_.signin_status=? and cashregist0_.log_in_date<?
Hibernate: select distinct rolefuncti0_.func_id as func_id1_22_0_, role2_.role_id as role_id1_20_1_, users4_.user_id as user_id1_32_2_, rolefuncti0_.main_role_function as main_rol4_22_0_, rolefuncti0_.role_access as role_acc2_22_0_, rolefuncti0_.role_function_name as role_fun3_22_0_, role2_.role_desc as role_des2_20_1_, role2_.role_name as role_nam3_20_1_, rolelist1_.roleFunctions_func_id as roleFunc2_21_0__, rolelist1_.rolelist_role_id as rolelist1_21_0__, users4_.status as status2_32_2_, users4_.address as address3_32_2_, users4_.contact_num as contact_4_32_2_, users4_.dob as dob5_32_2_, users4_.first_name as first_na6_32_2_, users4_.last_login as last_log7_32_2_, users4_.last_name as last_nam8_32_2_, users4_.loginStatus as loginSta9_32_2_, users4_.password as passwor10_32_2_, users4_.user_email as user_em11_32_2_, users4_.user_name as user_na12_32_2_, users3_.role_role_id as role_rol2_31_1__, users3_.users_user_id as users_us1_31_1__ from rolefunctions rolefuncti0_ inner join role_and_functions rolelist1_ on rolefuncti0_.func_id=rolelist1_.roleFunctions_func_id inner join role role2_ on rolelist1_.rolelist_role_id=role2_.role_id inner join user_role users3_ on role2_.role_id=users3_.role_role_id inner join users users4_ on users3_.users_user_id=users4_.user_id where users4_.user_name=? order by rolefuncti0_.role_function_name
1
Hibernate: select users0_.user_id as user_id1_32_0_, users0_.status as status2_32_0_, users0_.address as address3_32_0_, users0_.contact_num as contact_4_32_0_, users0_.dob as dob5_32_0_, users0_.first_name as first_na6_32_0_, users0_.last_login as last_log7_32_0_, users0_.last_name as last_nam8_32_0_, users0_.loginStatus as loginSta9_32_0_, users0_.password as passwor10_32_0_, users0_.user_email as user_em11_32_0_, users0_.user_name as user_na12_32_0_ from users users0_ where users0_.user_id=?
Hibernate: update users set status=?, address=?, contact_num=?, dob=?, first_name=?, last_login=?, last_name=?, loginStatus=?, password=?, user_email=?, user_name=? where user_id=?
yes
FUNC Bincard Summary
FUNC Price Revisions
FUNC Supplier Return Inquiry
FUNC Category Wise Stock Reports
FUNC Supplier Payment History
FUNC POS Sales Report
FUNC Customer Detail Report
FUNC Credit Invoice Summary
FUNC Profit & Loss Report
FUNC Out of Stock Reports
FUNC Supplier Wise Sales
FUNC Item Wise Stock Report
FUNC Supplier Payment Inquiry
FUNC Credit Invoice Inquiry
FUNC GRN Summary Reports
FUNC PO Summary Reports
FUNC Category Wise
FUNC PO Inquiry
FUNC Expenses Report
FUNC POS Bill Inquiry
FUNC Refund Inquiry
FUNC Supplier Return History
FUNC GRN Inquiry
FUNC Supplier Detail Report
Hibernate: select sum(withoutTaxSales) as withouttaxsale from ((select sal.user_id as user, sal.sales_date as tdate,cat.cat_name as catname,prd.prd_id as prdid, prd.p_name as pname,round(sum(sal.sales_qty),1) as salesqty ,round(sum(sal.item_net_amount),2) as TotalSales,round((sum(sal.discounted_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)),2) as vat, round((sum(sal.item_net_amount/((100+sal.item_vat)/100))),2) as withoutTaxSales from sales_detail sal inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id=prd.cat_id where sal.item_cancel_status=false group by tdate,cat.cat_name,prd.prd_id having sum(sal.sales_qty) > 0 order by sal.sales_date,cat.cat_name,(sal.sales_qty) desc)union all(select sal.user_id as user, sal.invoice_date as tdate,cat.cat_name as catname , prd.prd_id as prdid, prd.p_name as pname, round(sum(sal.sales_qty),1) as salesqty ,round(sum(sal.item_net_amount),2) as TotalSales , round((sum(sal.discounted_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)),2) as vat,round((sum(sal.item_net_amount/((100+sal.item_vat)/100))),2) as withoutTaxSales from credit_invoice_detail sal inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id=prd.cat_id group by tdate,cat.cat_name ,prd.prd_id having sum(sal.sales_qty) > 0 order by sal.invoice_date,cat.cat_name,(sal.sales_qty) desc)union all(select v.user_id as user,v.void_date as tdate,cat.cat_name as catname , prd.prd_id as prdid, prd.p_name as pname, round(sum(sal.sales_qty*(-1)),1) as salesqty ,round(sum(sal.item_net_amount*(-1)),2) as TotalSales , round((sum(sal.discounted_unit_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)*(-1)),2) as vat,round((sum(sal.item_net_amount/((100+sal.item_vat)/100))*(-1)),2) as withoutTaxSales from credit_invoice_void v inner join credit_invoice_void_detail sal on v.void_id=sal.void_id inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id=prd.cat_id group by tdate,cat.cat_name ,prd.prd_id having sum(sal.sales_qty)>0 order by v.void_date,cat.cat_name,(sal.sales_qty) desc)union all(select ref.user_id as user, ref.refund_date as tdate,cat.cat_name as catname , prd.prd_id as prdid, prd.p_name as pname, round(sum(sal.sales_qty*(-1)),1) as salesqty ,round(sum(sal.item_net_amount*(-1)),2) as TotalSales , round((sum(sal.discounted_unit_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)*(-1)),2) as vat,round((sum(sal.item_net_amount/((100+sal.item_vat)/100))*(-1)),2) as withoutTaxSales from customer_refunds ref inner join customer_refund_detail sal on ref.refund_id=sal.refund_id inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id=prd.cat_id group by tdate,cat.cat_name,prd.prd_id having sum(sal.sales_qty) > 0  order by ref.refund_date,cat.cat_name,(sal.sales_qty) desc) ) as t where tdate between ? and ? having sum(salesqty) <> 0 order by catname,salesqty ;
Hibernate: select pname, sum(withoutTaxSales) as withouttaxsale , sum(salesqty) as salesqty from((select sal.user_id as user, sal.sales_date as tdate,cat.cat_name as catname , prd.prd_id as prdid, prd.p_name as pname, round(sum(sal.sales_qty),1) as salesqty ,round(sum(sal.item_net_amount),2) as TotalSales,round((sum(sal.discounted_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)),2) as vat, round((sum(sal.item_net_amount/((100+sal.item_vat)/100))),2) as withoutTaxSales from sales_detail sal inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id= prd.cat_id where sal.item_cancel_status=false group by tdate,cat.cat_name ,prd.prd_id having sum(sal.sales_qty) > 0 order by sal.sales_date,cat.cat_name,(sal.sales_qty) desc)union all(select sal.user_id as user, sal.invoice_date as tdate,cat.cat_name as catname , prd.prd_id as prdid, prd.p_name as pname, round(sum(sal.sales_qty),1) as salesqty ,round(sum(sal.item_net_amount),2) as TotalSales ,round((sum(sal.discounted_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)),2) as vat,round((sum(sal.item_net_amount/((100+sal.item_vat)/100))),2) as withoutTaxSales from credit_invoice_detail sal inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id= prd.cat_id group by tdate,cat.cat_name ,prd.prd_id having sum(sal.sales_qty) > 0 order by sal.invoice_date,cat.cat_name,(sal.sales_qty) desc)union all(select v.user_id as user,v.void_date as tdate,cat.cat_name as catname , prd.prd_id as prdid, prd.p_name as pname, round(sum(sal.sales_qty*(-1)),1) as salesqty ,round(sum(sal.item_net_amount*(-1)),2) as TotalSales,round((sum(sal.discounted_unit_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)*(-1)),2) as vat,round((sum(sal.item_net_amount/((100+sal.item_vat)/100))*(-1)),2) as withoutTaxSales from credit_invoice_void v inner join credit_invoice_void_detail sal on v.void_id=sal.void_id inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id= prd.cat_id group by tdate,cat.cat_name ,prd.prd_id having sum(sal.sales_qty) > 0 order by v.void_date,cat.cat_name,(sal.sales_qty) desc)union all(select ref.user_id as user, ref.refund_date as tdate,cat.cat_name as catname , prd.prd_id as prdid, prd.p_name as pname, round(sum(sal.sales_qty*(-1)),1) as salesqty ,round(sum(sal.item_net_amount*(-1)),2) as TotalSales ,round((sum(sal.discounted_unit_price/ ((sal.item_vat+100)/100)*sal.item_vat/100 * sal.sales_qty)*(-1)),2) as vat,round((sum(sal.item_net_amount/((100+sal.item_vat)/100))*(-1)),2) as withoutTaxSales from customer_refunds ref inner join customer_refund_detail sal on ref.refund_id=sal.refund_id inner join products prd on prd.prd_id=sal.product_id inner join category cat on cat.cat_id= prd.cat_id group by tdate,cat.cat_name ,prd.prd_id having sum(sal.sales_qty) > 0 order by ref.refund_date,cat.cat_name,(sal.sales_qty) desc) ) as t where tdate between ? and ? group by prdid having sum(salesqty) <> 0 order by salesqty desc limit 10
Hibernate: select count(products0_.prd_id) as col_0_0_ from products products0_
Hibernate: select count(products0_.prd_id) as col_0_0_ from products products0_ where products0_.on_h_qty<=0.0
Hibernate: select count(sales0_.bill_no) as col_0_0_ from sales sales0_ inner join users users1_ on sales0_.user_id=users1_.user_id where sales0_.sales_date=? and sales0_.cancel_status=?
Hibernate: select sum(withoutTaxSales) , tdate from((select sum(s.net_bill_amount) as withoutTaxSales, s.sales_date as tdate from sales s where s.cancel_status=false group by tdate)union all(select sum(c.invoice_net_amount) as withoutTaxSales , c.invoice_date as tdate from credit_invoice c group by tdate)union all(select sum(cref.net_refund_amount*-1) as withoutTaxSales , cref.refund_date as tdate from customer_refunds cref group by tdate)union all(select sum(crvoid.net_void_amount*-1) as withoutTaxSales, crvoid.void_date as tdate from credit_invoice_void crvoid group by tdate))as t where tdate between ? and ? group by month(tdate)
Alert was Null Re initiated
1
Hibernate: select users0_.user_id as user_id1_32_0_, users0_.status as status2_32_0_, users0_.address as address3_32_0_, users0_.contact_num as contact_4_32_0_, users0_.dob as dob5_32_0_, users0_.first_name as first_na6_32_0_, users0_.last_login as last_log7_32_0_, users0_.last_name as last_nam8_32_0_, users0_.loginStatus as loginSta9_32_0_, users0_.password as passwor10_32_0_, users0_.user_email as user_em11_32_0_, users0_.user_name as user_na12_32_0_ from users users0_ where users0_.user_id=?
Hibernate: update users set status=?, address=?, contact_num=?, dob=?, first_name=?, last_login=?, last_name=?, loginStatus=?, password=?, user_email=?, user_name=? where user_id=?
